name: Docker Build & Push

# Dispara quando houver push na branch main
on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1) Pega o código
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Configura buildx para multi-arch (amd64/arm64)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3) Login no Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4) Extrair versão automática do commit
      - name: Set image tags
        id: vars
        run: |
          echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          SHORT_HASH=$(git rev-parse --short HEAD)
          echo "COMMIT_TAG=$SHORT_HASH" >> $GITHUB_ENV

      # 5) Build e push da imagem
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            phmasc/phmasc-ytube:latest
            phmasc/phmasc-ytube:${{ env.COMMIT_TAG }}
          platforms: linux/amd64,linux/arm64
